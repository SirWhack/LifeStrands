networks:
  lifestrands-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.50.0.0/16

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  logs-data:
    driver: local

services:
  # ================================
  # Database Services
  # ================================
  
  postgres:
    image: pgvector/pgvector:pg15
    container_name: lifestrands-postgres
    environment:
      POSTGRES_DB: lifestrands
      POSTGRES_USER: lifestrands_user
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-lifestrands_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    networks:
      lifestrands-network:
        ipv4_address: 10.50.0.10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lifestrands_user -d lifestrands"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: lifestrands-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password} --maxmemory 1gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      lifestrands-network:
        ipv4_address: 10.50.0.11
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # ================================
  # Supporting Services
  # ================================

  nginx:
    image: nginx:alpine
    container_name: lifestrands-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - logs-data:/var/log/nginx
    networks:
      lifestrands-network:
        ipv4_address: 10.50.0.30
    restart: unless-stopped
    profiles: ["nginx"]

  # ================================
  # Development Tools (Optional)
  # ================================

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: lifestrands-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin123}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_CHECK_EMAIL_DELIVERABILITY=False
    ports:
      - "8080:80"
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      lifestrands-network:
        ipv4_address: 10.50.0.50
    depends_on:
      - postgres
    restart: unless-stopped
    profiles: ["dev-tools"]

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: lifestrands-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD:-redis_password}
    ports:
      - "8081:8081"
    networks:
      lifestrands-network:
        ipv4_address: 10.50.0.51
    depends_on:
      - redis
    restart: unless-stopped
    profiles: ["dev-tools"]

  # ================================
  # Frontend Applications (Optional)
  # ================================

  chat-interface:
    build:
      context: ./frontends/chat-interface
      dockerfile: Dockerfile
    container_name: lifestrands-chat-interface
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
    ports:
      - "3000:3000"
    networks:
      lifestrands-network:
        ipv4_address: 10.50.0.60
    restart: unless-stopped
    profiles: ["frontend"]

  admin-dashboard:
    build:
      context: ./frontends/admin-dashboard
      dockerfile: Dockerfile
    container_name: lifestrands-admin-dashboard
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
    ports:
      - "3002:3000"
    networks:
      lifestrands-network:
        ipv4_address: 10.50.0.61
    restart: unless-stopped
    profiles: ["frontend"]

# ================================
# Health Checks and Dependencies
# ================================

x-healthcheck-defaults: &healthcheck_defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 30s
